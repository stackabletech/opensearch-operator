---
apiVersion: opensearch.stackable.tech/v1alpha1
kind: OpenSearchCluster
metadata:
  name: opensearch
spec:
  image:
{% if test_scenario['values']['opensearch'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['opensearch'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['opensearch'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['opensearch'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    tls:
      secretClass: tls
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  nodes:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
        containers:
          opensearch:
            console:
              level: DEBUG
            file:
              level: DEBUG
            loggers:
              # Successful authorizations are logged at the DEBUG level.
              org.opensearch.security:
                level: DEBUG
    roleGroups:
      default:
        replicas: 3
    envOverrides:
      # Only required for the official image
      # The official image (built with https://github.com/opensearch-project/opensearch-build)
      # installs a demo configuration if not disabled explicitly.
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      OPENSEARCH_HOME: {{ test_scenario['values']['opensearch_home'] }}
    configOverrides:
      opensearch.yml:
        # Disable memory mapping in this test; If memory mapping were activated, the kernel setting
        # vm.max_map_count would have to be increased to 262144 on the node.
        node.store.allow_mmap: "false"
        # Disable the disk allocation decider in this test; Otherwise the test depends on the disk
        # usage of the node and if the relative watermark set in
        # `cluster.routing.allocation.disk.watermark.high` is reached then the security index could
        # not be created even if enough disk space would be available.
        cluster.routing.allocation.disk.threshold_enabled: "false"
        plugins.security.allow_default_init_securityindex: "true"
    podOverrides:
      spec:
        containers:
          - name: opensearch
            volumeMounts:
              - name: security-config
                mountPath: {{ test_scenario['values']['opensearch_home'] }}/config/opensearch-security
                readOnly: true
        volumes:
          - name: security-config
            secret:
              secretName: opensearch-security-config
              defaultMode: 0o660
